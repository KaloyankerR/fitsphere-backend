plugins {
    id 'java'
    id 'jacoco'
    id 'java-library'
    id "org.flywaydb.flyway" version '8.0.0'
    id "org.sonarqube" version "4.4.1.3373"
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'fontys.ind'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

// Software metrics
jacocoTestReport {
    reports {
        xml.required = true
    }
}

flyway {
    url = System.getenv('FLYWAY_URL') ?: 'jdbc:mysql://localhost:3306/fitsphere'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: 'rihanna2912'
    driver = 'com.mysql.cj.jdbc.Driver'
    connectRetries = 10
    baselineOnMigrate = true
}

sonar {
    properties {
        property "sonar.projectKey", System.getenv('SONAR_PRJ_KEY')
        property "sonar.organization", "Fontys"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.token", System.getenv('SONAR_TOKEN')
        property "sonar.source", "src"
        property "sonar.inclusions", "src/**"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", [
                "src/main/java/fontys/ind/configuration/**",
                "src/main/java/fontys/ind/persistence/**",
                "src/main/java/fontys/ind/domain/**",
                "src/main/java/fontys/ind/controller/**"
        ]
    }
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JUnit
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // Flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql:8.4.4'

    // Database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java:8.0.28'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Commons Math
    api 'org.apache.commons:commons-math3:3.6.1'

    // Guava
    implementation 'com.google.guava:guava:23.0'

    // JJWT (JSON Web Token)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Springdoc OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // Mockito & Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'

    // Websockets and chatting
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // implementation 'org.springframework.boot:spring-boot-starter-messaging'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Additionally added
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}
